//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project2.ComputerWebService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Computer", Namespace="http://tempuri.org/")]
    [System.SerializableAttribute()]
    public partial class Computer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProducerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScreenSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScreenResolutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TouchScreenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysicalCoresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CpuClockSpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiscSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiscTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GpuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GpuMemoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatingSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpticalDriveField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Producer {
            get {
                return this.ProducerField;
            }
            set {
                if ((object.ReferenceEquals(this.ProducerField, value) != true)) {
                    this.ProducerField = value;
                    this.RaisePropertyChanged("Producer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ScreenSize {
            get {
                return this.ScreenSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.ScreenSizeField, value) != true)) {
                    this.ScreenSizeField = value;
                    this.RaisePropertyChanged("ScreenSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string ScreenResolution {
            get {
                return this.ScreenResolutionField;
            }
            set {
                if ((object.ReferenceEquals(this.ScreenResolutionField, value) != true)) {
                    this.ScreenResolutionField = value;
                    this.RaisePropertyChanged("ScreenResolution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string DisplayType {
            get {
                return this.DisplayTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayTypeField, value) != true)) {
                    this.DisplayTypeField = value;
                    this.RaisePropertyChanged("DisplayType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string TouchScreen {
            get {
                return this.TouchScreenField;
            }
            set {
                if ((object.ReferenceEquals(this.TouchScreenField, value) != true)) {
                    this.TouchScreenField = value;
                    this.RaisePropertyChanged("TouchScreen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string Processor {
            get {
                return this.ProcessorField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessorField, value) != true)) {
                    this.ProcessorField = value;
                    this.RaisePropertyChanged("Processor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string PhysicalCores {
            get {
                return this.PhysicalCoresField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicalCoresField, value) != true)) {
                    this.PhysicalCoresField = value;
                    this.RaisePropertyChanged("PhysicalCores");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string CpuClockSpeed {
            get {
                return this.CpuClockSpeedField;
            }
            set {
                if ((object.ReferenceEquals(this.CpuClockSpeedField, value) != true)) {
                    this.CpuClockSpeedField = value;
                    this.RaisePropertyChanged("CpuClockSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string Ram {
            get {
                return this.RamField;
            }
            set {
                if ((object.ReferenceEquals(this.RamField, value) != true)) {
                    this.RamField = value;
                    this.RaisePropertyChanged("Ram");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string DiscSize {
            get {
                return this.DiscSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.DiscSizeField, value) != true)) {
                    this.DiscSizeField = value;
                    this.RaisePropertyChanged("DiscSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string DiscType {
            get {
                return this.DiscTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DiscTypeField, value) != true)) {
                    this.DiscTypeField = value;
                    this.RaisePropertyChanged("DiscType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string Gpu {
            get {
                return this.GpuField;
            }
            set {
                if ((object.ReferenceEquals(this.GpuField, value) != true)) {
                    this.GpuField = value;
                    this.RaisePropertyChanged("Gpu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string GpuMemory {
            get {
                return this.GpuMemoryField;
            }
            set {
                if ((object.ReferenceEquals(this.GpuMemoryField, value) != true)) {
                    this.GpuMemoryField = value;
                    this.RaisePropertyChanged("GpuMemory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string OperatingSystem {
            get {
                return this.OperatingSystemField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatingSystemField, value) != true)) {
                    this.OperatingSystemField = value;
                    this.RaisePropertyChanged("OperatingSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public string OpticalDrive {
            get {
                return this.OpticalDriveField;
            }
            set {
                if ((object.ReferenceEquals(this.OpticalDriveField, value) != true)) {
                    this.OpticalDriveField = value;
                    this.RaisePropertyChanged("OpticalDrive");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ComputerWebService.ComputerWebServiceSoap")]
    public interface ComputerWebServiceSoap {
        
        // CODEGEN: Generating message contract since element name HelloWorldResult from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        Project2.ComputerWebService.HelloWorldResponse HelloWorld(Project2.ComputerWebService.HelloWorldRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<Project2.ComputerWebService.HelloWorldResponse> HelloWorldAsync(Project2.ComputerWebService.HelloWorldRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (GetCountOfComputersByProducer) of message ComputersCountResponse does not match the default value (ComputersCount)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ComputersCount", ReplyAction="*")]
        Project2.ComputerWebService.ComputersCountResponse ComputersCount(Project2.ComputerWebService.ComputersCountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ComputersCount", ReplyAction="*")]
        System.Threading.Tasks.Task<Project2.ComputerWebService.ComputersCountResponse> ComputersCountAsync(Project2.ComputerWebService.ComputersCountRequest request);
        
        // CODEGEN: Generating message contract since element name displayType from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetComputersByDisplayType", ReplyAction="*")]
        Project2.ComputerWebService.GetComputersByDisplayTypeResponse GetComputersByDisplayType(Project2.ComputerWebService.GetComputersByDisplayTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetComputersByDisplayType", ReplyAction="*")]
        System.Threading.Tasks.Task<Project2.ComputerWebService.GetComputersByDisplayTypeResponse> GetComputersByDisplayTypeAsync(Project2.ComputerWebService.GetComputersByDisplayTypeRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class HelloWorldRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="HelloWorld", Namespace="http://tempuri.org/", Order=0)]
        public Project2.ComputerWebService.HelloWorldRequestBody Body;
        
        public HelloWorldRequest() {
        }
        
        public HelloWorldRequest(Project2.ComputerWebService.HelloWorldRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class HelloWorldRequestBody {
        
        public HelloWorldRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class HelloWorldResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="HelloWorldResponse", Namespace="http://tempuri.org/", Order=0)]
        public Project2.ComputerWebService.HelloWorldResponseBody Body;
        
        public HelloWorldResponse() {
        }
        
        public HelloWorldResponse(Project2.ComputerWebService.HelloWorldResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class HelloWorldResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string HelloWorldResult;
        
        public HelloWorldResponseBody() {
        }
        
        public HelloWorldResponseBody(string HelloWorldResult) {
            this.HelloWorldResult = HelloWorldResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ComputersCount", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ComputersCountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string producer;
        
        public ComputersCountRequest() {
        }
        
        public ComputersCountRequest(string producer) {
            this.producer = producer;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCountOfComputersByProducer", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ComputersCountResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int ComputersCountResult;
        
        public ComputersCountResponse() {
        }
        
        public ComputersCountResponse(int ComputersCountResult) {
            this.ComputersCountResult = ComputersCountResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetComputersByDisplayTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetComputersByDisplayType", Namespace="http://tempuri.org/", Order=0)]
        public Project2.ComputerWebService.GetComputersByDisplayTypeRequestBody Body;
        
        public GetComputersByDisplayTypeRequest() {
        }
        
        public GetComputersByDisplayTypeRequest(Project2.ComputerWebService.GetComputersByDisplayTypeRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetComputersByDisplayTypeRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string displayType;
        
        public GetComputersByDisplayTypeRequestBody() {
        }
        
        public GetComputersByDisplayTypeRequestBody(string displayType) {
            this.displayType = displayType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetComputersByDisplayTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetComputersByDisplayTypeResponse", Namespace="http://tempuri.org/", Order=0)]
        public Project2.ComputerWebService.GetComputersByDisplayTypeResponseBody Body;
        
        public GetComputersByDisplayTypeResponse() {
        }
        
        public GetComputersByDisplayTypeResponse(Project2.ComputerWebService.GetComputersByDisplayTypeResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetComputersByDisplayTypeResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public Project2.ComputerWebService.Computer[] GetComputersByDisplayTypeResult;
        
        public GetComputersByDisplayTypeResponseBody() {
        }
        
        public GetComputersByDisplayTypeResponseBody(Project2.ComputerWebService.Computer[] GetComputersByDisplayTypeResult) {
            this.GetComputersByDisplayTypeResult = GetComputersByDisplayTypeResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ComputerWebServiceSoapChannel : Project2.ComputerWebService.ComputerWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ComputerWebServiceSoapClient : System.ServiceModel.ClientBase<Project2.ComputerWebService.ComputerWebServiceSoap>, Project2.ComputerWebService.ComputerWebServiceSoap {
        
        public ComputerWebServiceSoapClient() {
        }
        
        public ComputerWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ComputerWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ComputerWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ComputerWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Project2.ComputerWebService.HelloWorldResponse Project2.ComputerWebService.ComputerWebServiceSoap.HelloWorld(Project2.ComputerWebService.HelloWorldRequest request) {
            return base.Channel.HelloWorld(request);
        }
        
        public string HelloWorld() {
            Project2.ComputerWebService.HelloWorldRequest inValue = new Project2.ComputerWebService.HelloWorldRequest();
            inValue.Body = new Project2.ComputerWebService.HelloWorldRequestBody();
            Project2.ComputerWebService.HelloWorldResponse retVal = ((Project2.ComputerWebService.ComputerWebServiceSoap)(this)).HelloWorld(inValue);
            return retVal.Body.HelloWorldResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Project2.ComputerWebService.HelloWorldResponse> Project2.ComputerWebService.ComputerWebServiceSoap.HelloWorldAsync(Project2.ComputerWebService.HelloWorldRequest request) {
            return base.Channel.HelloWorldAsync(request);
        }
        
        public System.Threading.Tasks.Task<Project2.ComputerWebService.HelloWorldResponse> HelloWorldAsync() {
            Project2.ComputerWebService.HelloWorldRequest inValue = new Project2.ComputerWebService.HelloWorldRequest();
            inValue.Body = new Project2.ComputerWebService.HelloWorldRequestBody();
            return ((Project2.ComputerWebService.ComputerWebServiceSoap)(this)).HelloWorldAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Project2.ComputerWebService.ComputersCountResponse Project2.ComputerWebService.ComputerWebServiceSoap.ComputersCount(Project2.ComputerWebService.ComputersCountRequest request) {
            return base.Channel.ComputersCount(request);
        }
        
        public int ComputersCount(string producer) {
            Project2.ComputerWebService.ComputersCountRequest inValue = new Project2.ComputerWebService.ComputersCountRequest();
            inValue.producer = producer;
            Project2.ComputerWebService.ComputersCountResponse retVal = ((Project2.ComputerWebService.ComputerWebServiceSoap)(this)).ComputersCount(inValue);
            return retVal.ComputersCountResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Project2.ComputerWebService.ComputersCountResponse> Project2.ComputerWebService.ComputerWebServiceSoap.ComputersCountAsync(Project2.ComputerWebService.ComputersCountRequest request) {
            return base.Channel.ComputersCountAsync(request);
        }
        
        public System.Threading.Tasks.Task<Project2.ComputerWebService.ComputersCountResponse> ComputersCountAsync(string producer) {
            Project2.ComputerWebService.ComputersCountRequest inValue = new Project2.ComputerWebService.ComputersCountRequest();
            inValue.producer = producer;
            return ((Project2.ComputerWebService.ComputerWebServiceSoap)(this)).ComputersCountAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Project2.ComputerWebService.GetComputersByDisplayTypeResponse Project2.ComputerWebService.ComputerWebServiceSoap.GetComputersByDisplayType(Project2.ComputerWebService.GetComputersByDisplayTypeRequest request) {
            return base.Channel.GetComputersByDisplayType(request);
        }
        
        public Project2.ComputerWebService.Computer[] GetComputersByDisplayType(string displayType) {
            Project2.ComputerWebService.GetComputersByDisplayTypeRequest inValue = new Project2.ComputerWebService.GetComputersByDisplayTypeRequest();
            inValue.Body = new Project2.ComputerWebService.GetComputersByDisplayTypeRequestBody();
            inValue.Body.displayType = displayType;
            Project2.ComputerWebService.GetComputersByDisplayTypeResponse retVal = ((Project2.ComputerWebService.ComputerWebServiceSoap)(this)).GetComputersByDisplayType(inValue);
            return retVal.Body.GetComputersByDisplayTypeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Project2.ComputerWebService.GetComputersByDisplayTypeResponse> Project2.ComputerWebService.ComputerWebServiceSoap.GetComputersByDisplayTypeAsync(Project2.ComputerWebService.GetComputersByDisplayTypeRequest request) {
            return base.Channel.GetComputersByDisplayTypeAsync(request);
        }
        
        public System.Threading.Tasks.Task<Project2.ComputerWebService.GetComputersByDisplayTypeResponse> GetComputersByDisplayTypeAsync(string displayType) {
            Project2.ComputerWebService.GetComputersByDisplayTypeRequest inValue = new Project2.ComputerWebService.GetComputersByDisplayTypeRequest();
            inValue.Body = new Project2.ComputerWebService.GetComputersByDisplayTypeRequestBody();
            inValue.Body.displayType = displayType;
            return ((Project2.ComputerWebService.ComputerWebServiceSoap)(this)).GetComputersByDisplayTypeAsync(inValue);
        }
    }
}
